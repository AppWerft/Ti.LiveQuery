/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2010 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package de.appwerft.parselivequery;

import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;

import org.appcelerator.kroll.KrollDict;
import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiC;

import android.content.Context;

import com.parse.Parse;
import com.parse.ParseLiveQueryClient;
import com.parse.interceptors.ParseLogInterceptor;

@Kroll.module(name = "Parselivequery", id = "de.appwerft.parselivequery")
public class ParselivequeryModule extends KrollModule {

	// Standard Debugging variables
	private static final String LCAT = "ParselivequeryModule";
	private static final boolean DBG = TiConfig.LOGD;
	ParseLiveQueryClient parseLiveQueryClient;
	Context ctx;

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;

	public ParselivequeryModule() {
		super();
		ctx = TiApplication.getInstance().getBaseContext();
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app) {
		Log.d(LCAT, "inside onAppCreate");
		// put module init code that needs to run when the application is
		// created
	}

	@Kroll.method
	public boolean setEndpoint(@Kroll.argument(optional = true) KrollDict opts) {
		String applicationId = null;
		if (opts != null) {
			if (opts.containsKeyAndNotNull("applicationId")) {
				applicationId = opts.getString("applicationId");
			}
			if (opts.containsKeyAndNotNull(TiC.PROPERTY_URI)) {
				try {
					@SuppressWarnings("unused")
					URI dummy = new URI(opts.getString(TiC.PROPERTY_URI));
					// first we need Parse client
					Parse.initialize(new Parse.Configuration.Builder(ctx)
							.applicationId(applicationId)
							// .addNetworkInterceptor(new ParseLogInterceptor())
							.server(opts.getString(TiC.PROPERTY_URI)).build());
					// and a parseLiveQueryClient
					parseLiveQueryClient = ParseLiveQueryClient.Factory
							.getClient();
					return true;
				} catch (URISyntaxException e) {
					e.printStackTrace();
					return false;
				}
			}

		} else
			parseLiveQueryClient = ParseLiveQueryClient.Factory.getClient();
		return true;
	}

}
